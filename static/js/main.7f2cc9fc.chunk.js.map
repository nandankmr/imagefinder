{"version":3,"sources":["components/SearchImages.js","components/Search.js","App.js","index.js"],"names":["SearchImages","images","useState","focus","setFocus","classes","makeStyles","theme","appBar","position","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","closeButton","right","spacing","top","grey","useStyles","React","open","setOpen","handleClickOpen","img","handleClose","className","GridList","cellHeight","cols","style","minHeight","map","tile","GridListTile","key","id","src","webformatURL","alt","onClick","largeImageURL","GridListTileBar","title","tags","subtitle","user","actionIcon","IconButton","aria-label","name","Dialog","padding","fullScreen","onClose","aria-labelledby","AppBar","Toolbar","edge","href","download","target","DialogContent","margin","maxWidth","maxHeight","marginTop","bottom","textAlign","paddingTop","Search","setImages","q","setQ","hits","setHits","openSource","setOpenSource","source","setSource","setTimeout","time","setTime","useEffect","clearTimeout","Axios","get","toLowerCase","then","res","data","console","log","catch","err","Fragment","marginBottom","TextField","label","variant","defaultValue","fullWidth","onChange","e","value","InputLabel","Select","onOpen","MenuItem","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f2cc9fc.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\n\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { DialogContent, DialogActions, Button } from \"@material-ui/core\";\n\nexport default function SearchImages({ images }) {\n  const [focus, setFocus] = useState(\"\");\n  const useStyles = makeStyles(theme => ({\n    appBar: {\n      position: \"relative\"\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    },\n    icon: {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  }));\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = img => {\n    setFocus(img);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} cols={3} style={{ minHeight: \"80vh\" }}>\n        {images.map(tile => (\n          <GridListTile key={tile.id}>\n            <img\n              src={tile.webformatURL}\n              alt=''\n              onClick={() => {\n                handleClickOpen(tile.largeImageURL);\n              }}\n            />\n            <GridListTileBar\n              title={tile.tags}\n              subtitle={<span>{tile.user?\"by:\":null} {tile.user}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                  onClick={() => {\n                    handleClickOpen(tile.largeImageURL);\n                  }}\n                  name={tile.webformatURL}\n                >\n                  <ZoomInIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <Dialog\n        style={{ padding: \"0\" }}\n        fullScreen\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n\n            <a href={focus} download target=\"_blank\" title=\"Download\">\n              <IconButton edge=\"end\" color=\"inherit\" aria-label=\"download\">\n                <GetAppIcon />\n              </IconButton>\n            </a>\n          </Toolbar>\n        </AppBar>\n\n        <DialogContent style={{ padding: \"0\", margin: \"auto\" }}>\n          <img\n            style={{ maxWidth: \"100%\", maxHeight: \"100%\", margin:\"auto\" }}\n            src={focus}\n            alt=\"\"\n          />\n        </DialogContent>\n      </Dialog>\n\n      <footer\n        style={{\n          height: \"2rem\",\n          marginTop: \"1rem\",\n          background: \"#333\",\n          bottom: \"0px\",\n          width: \"100%\",\n          color: \"#eee\",\n          textAlign: \"center\",\n          paddingTop: \"1rem\"\n        }}\n      >\n        Nandan Kumar, &copy; 2020\n      </footer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Select, TextField, InputLabel, MenuItem } from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport SearchImages from \"./SearchImages\";\n\nexport default function Search() {\n  const [images, setImages] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [hits, setHits] = useState(10);\n  const [open, setOpen] = useState(false);\n  const [openSource, setOpenSource] = useState(false);\n  const [source, setSource] = useState(\"Pixabay\");\n  const [time, setTime] = useState(setTimeout(() => {}, 1000));\n\n  const getServerImages = () => {\n    clearTimeout(time);\n\n    setTime(\n      setTimeout(() => {\n        Axios.get(\n          `https://imageseeker.herokuapp.com/${source.toLowerCase()}/?q=${q}&hits=${hits}`\n        )\n          .then(res => {\n            setImages(res.data);\n            console.log(res.data);\n          })\n          .catch(err => console.log(err));\n      }, source==='Unsplash'?1000:500)\n    );\n  };\n\n  useEffect(() => getServerImages(), [hits, q, source]);\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          background: \"#333\",\n          textAlign: \"center\",\n          color: \"#eee\",\n          padding: \"10px\",\n          marginBottom: \"1rem\"\n        }}\n      >\n        <h1 style={{ margin: 0 }}>Image Finder</h1>\n      </div>\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Search Images\"\n        variant=\"outlined\"\n        defaultValue={q}\n        fullWidth={true}\n        onChange={e => setQ(e.target.value)}\n      />\n      <InputLabel style={{ width: \"100px\", marginTop: \"5px\" }}>\n        <em>Hits</em>\n      </InputLabel>\n      <Select\n        style={{ width: \"100px\", marginBottom: \"8px\" }}\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        value={hits}\n        onChange={e => setHits(e.target.value)}\n      >\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10</MenuItem>\n        <MenuItem value={20}>20</MenuItem>\n        <MenuItem value={30}>30</MenuItem>\n        <MenuItem value={50}>50</MenuItem>\n      </Select>\n\n      <InputLabel style={{ width: \"100px\", marginTop: \"5px\" }}>\n        <em>Source</em>\n      </InputLabel>\n      <Select\n        style={{ width: \"100px\", marginBottom: \"8px\" }}\n        open={openSource}\n        onClose={() => setOpenSource(false)}\n        onOpen={() => setOpenSource(true)}\n        value={source}\n        onChange={e => setSource(e.target.value)}\n      >\n        <MenuItem value={\"Pixabay\"}>Pixabay</MenuItem>\n        <MenuItem value={\"Unsplash\"}>Unsplash</MenuItem>\n        <MenuItem value={\"Pexels\"}>Pexels</MenuItem>\n        <MenuItem value={\"Giphy\"}>Giphy</MenuItem>\n      </Select>\n\n      {images.length ? <SearchImages images={images} /> : \" \"}\n    </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport Search from './components/Search'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}