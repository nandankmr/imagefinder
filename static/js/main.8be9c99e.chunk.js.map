{"version":3,"sources":["components/SearchImages.js","components/Search.js","App.js","index.js"],"names":["SearchImages","images","useState","focus","setFocus","classes","makeStyles","theme","appBar","position","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","closeButton","right","spacing","top","grey","useStyles","React","open","setOpen","handleClickOpen","img","handleClose","className","GridList","cellHeight","cols","style","minHeight","map","tile","GridListTile","key","previewURL","src","webformatURL","alt","tags","onClick","largeImageURL","GridListTileBar","title","subtitle","user","actionIcon","IconButton","aria-label","name","Dialog","padding","fullScreen","onClose","aria-labelledby","AppBar","Toolbar","edge","DialogContent","dividers","margin","maxWidth","maxHeight","marginTop","bottom","textAlign","paddingTop","Search","setImages","q","setQ","hits","setHits","useEffect","Axios","get","then","res","data","catch","err","console","log","Fragment","marginBottom","TextField","id","label","variant","defaultValue","fullWidth","onChange","e","target","value","InputLabel","Select","onOpen","MenuItem","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8be9c99e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  IconButton,\n  AppBar,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\n\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { DialogContent, DialogActions, Button } from \"@material-ui/core\";\n\nexport default function SearchImages({ images }) {\n  const [focus, setFocus] = useState(\"\");\n  const useStyles = makeStyles(theme => ({\n    appBar: {\n      position: \"relative\"\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    },\n    icon: {\n      color: \"rgba(255, 255, 255, 0.54)\"\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  }));\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = img => {\n    setFocus(img);\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <div className={classes.root}>\n      <GridList cellHeight={180} cols={3}\n      style={{ minHeight: \"80vh\"}}\n      >\n        {images.map(tile => (\n          <GridListTile key={tile.previewURL}>\n            <img\n              src={tile.webformatURL}\n              alt={tile.tags}\n              onClick={() => {\n                handleClickOpen(tile.largeImageURL);\n              }}\n            />\n            <GridListTileBar\n              title={tile.tags}\n              subtitle={<span>by: {tile.user}</span>}\n              actionIcon={\n                <IconButton\n                  aria-label={`info about ${tile.title}`}\n                  className={classes.icon}\n                  onClick={() => {\n                    handleClickOpen(tile.largeImageURL);\n                  }}\n                  name={tile.webformatURL}\n                >\n                  <ZoomInIcon />\n                </IconButton>\n              }\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n      <Dialog\n        style={{ padding: \"0\" }}\n        fullScreen\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <DialogContent dividers style={{ padding: \"0\", margin: \"0\" }}>\n          <img\n            style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n            src={focus}\n            alt=\"\"\n          />\n        </DialogContent>\n      </Dialog>\n\n      <footer\n        style={{\n          height: \"2rem\",\n          marginTop: \"1rem\",\n          background: \"#333\",\n          bottom: \"0px\",\n          width: \"100%\",\n          color: \"#eee\",\n          textAlign: \"center\",\n          paddingTop:\"1rem\"\n        }}\n      >\n        Nandan Kumar, &copy; 2020 \n      </footer>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Select,\n  TextField,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  AppBar,\n  Typography\n} from \"@material-ui/core\";\nimport Axios from \"axios\";\nimport SearchImages from \"./SearchImages\";\n\nexport default function Search() {\n  const [images, setImages] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [hits, setHits] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const getImages = () => {\n    const key = \"14838845-97aff471166809fe19bd2c3a9\";\n    Axios.get(\n      \"https://pixabay.com/api/?key=\" +\n        key +\n        \"&q=\" +\n        q +\n        \"&image_type=photo&per_page=\" +\n        hits\n    )\n      .then(res => {\n        setImages(res.data.hits);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => getImages(), [hits, q]);\n\n  return (\n    <React.Fragment>\n      <div\n        style={{\n          background: \"#333\",\n          textAlign: \"center\",\n          color: \"#eee\",\n          padding: \"10px\",\n          marginBottom: \"1rem\"\n        }}\n      >\n        <h1 style={{ margin: 0 }}>Image Finder</h1>\n      </div>\n\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Search Images\"\n        variant=\"outlined\"\n        defaultValue={q}\n        fullWidth={true}\n        onChange={e => setQ(e.target.value)}\n      />\n      <InputLabel style={{ width: \"100px\", marginTop: \"5px\" }}>\n        <em>Hits</em>\n      </InputLabel>\n      <Select\n        style={{ width: \"100px\", marginBottom: \"8px\" }}\n        //   labelId=\"demo-controlled-open-select-label\"\n        open={open}\n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        value={hits}\n        onChange={e => setHits(e.target.value)}\n      >\n        <MenuItem value={5}>5</MenuItem>\n        <MenuItem value={10}>10</MenuItem>\n        <MenuItem value={20}>20</MenuItem>\n        <MenuItem value={30}>30</MenuItem>\n        <MenuItem value={50}>50</MenuItem>\n      </Select>\n\n      {images.length ? <SearchImages images={images} /> : \" \"}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Search from './components/Search'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Search/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}